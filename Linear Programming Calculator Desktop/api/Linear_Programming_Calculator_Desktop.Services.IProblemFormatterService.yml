### YamlMime:ManagedReference
items:
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  commentId: T:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  id: IProblemFormatterService
  parent: Linear_Programming_Calculator_Desktop.Services
  children:
  - Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  - Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain(Methods.MathObjects.LinearProgrammingProblem)
  - Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  - Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction(Methods.MathObjects.LinearProgrammingProblem)
  langs:
  - csharp
  - vb
  name: IProblemFormatterService
  nameWithType: IProblemFormatterService
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  type: Interface
  source:
    remote:
      path: Linear Programming Calculator Desktop/Services/IProblemFormatterService.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: IProblemFormatterService
    path: Services/IProblemFormatterService.cs
    startLine: 7
  assemblies:
  - Linear Programming Calculator Desktop
  namespace: Linear_Programming_Calculator_Desktop.Services
  summary: Service interface that provides methods to format different parts of a LPP for display.
  example: []
  syntax:
    content: public interface IProblemFormatterService
    content.vb: Public Interface IProblemFormatterService
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction(Methods.MathObjects.LinearProgrammingProblem)
  commentId: M:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction(Methods.MathObjects.LinearProgrammingProblem)
  id: BuildObjectiveFunction(Methods.MathObjects.LinearProgrammingProblem)
  parent: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  langs:
  - csharp
  - vb
  name: BuildObjectiveFunction(LinearProgrammingProblem)
  nameWithType: IProblemFormatterService.BuildObjectiveFunction(LinearProgrammingProblem)
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction(Methods.MathObjects.LinearProgrammingProblem)
  type: Method
  source:
    remote:
      path: Linear Programming Calculator Desktop/Services/IProblemFormatterService.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: BuildObjectiveFunction
    path: Services/IProblemFormatterService.cs
    startLine: 14
  assemblies:
  - Linear Programming Calculator Desktop
  namespace: Linear_Programming_Calculator_Desktop.Services
  summary: Builds a formatted string representation of the objective function.
  example: []
  syntax:
    content: string BuildObjectiveFunction(LinearProgrammingProblem problem)
    parameters:
    - id: problem
      type: Methods.MathObjects.LinearProgrammingProblem
      description: The linear programming problem.
    return:
      type: System.String
      description: A formatted string of the objective function.
    content.vb: Function BuildObjectiveFunction(problem As LinearProgrammingProblem) As String
  overload: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction*
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  commentId: M:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  id: BuildConstraints(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  parent: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  langs:
  - csharp
  - vb
  name: BuildConstraints(LinearProgrammingProblem, bool)
  nameWithType: IProblemFormatterService.BuildConstraints(LinearProgrammingProblem, bool)
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints(Methods.MathObjects.LinearProgrammingProblem, bool)
  type: Method
  source:
    remote:
      path: Linear Programming Calculator Desktop/Services/IProblemFormatterService.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: BuildConstraints
    path: Services/IProblemFormatterService.cs
    startLine: 22
  assemblies:
  - Linear Programming Calculator Desktop
  namespace: Linear_Programming_Calculator_Desktop.Services
  summary: Builds a list of formatted strings representing the problem constraints.
  example: []
  syntax:
    content: List<string> BuildConstraints(LinearProgrammingProblem problem, bool isEqual)
    parameters:
    - id: problem
      type: Methods.MathObjects.LinearProgrammingProblem
      description: The linear programming problem.
    - id: isEqual
      type: System.Boolean
      description: Indicates whether constraints are equalities or inequalities.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of formatted constraint strings.
    content.vb: Function BuildConstraints(problem As LinearProgrammingProblem, isEqual As Boolean) As List(Of String)
  overload: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints*
  nameWithType.vb: IProblemFormatterService.BuildConstraints(LinearProgrammingProblem, Boolean)
  fullName.vb: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints(Methods.MathObjects.LinearProgrammingProblem, Boolean)
  name.vb: BuildConstraints(LinearProgrammingProblem, Boolean)
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain(Methods.MathObjects.LinearProgrammingProblem)
  commentId: M:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain(Methods.MathObjects.LinearProgrammingProblem)
  id: BuildDomain(Methods.MathObjects.LinearProgrammingProblem)
  parent: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  langs:
  - csharp
  - vb
  name: BuildDomain(LinearProgrammingProblem)
  nameWithType: IProblemFormatterService.BuildDomain(LinearProgrammingProblem)
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain(Methods.MathObjects.LinearProgrammingProblem)
  type: Method
  source:
    remote:
      path: Linear Programming Calculator Desktop/Services/IProblemFormatterService.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: BuildDomain
    path: Services/IProblemFormatterService.cs
    startLine: 29
  assemblies:
  - Linear Programming Calculator Desktop
  namespace: Linear_Programming_Calculator_Desktop.Services
  summary: Builds a formatted string representing the domain constraint, such as x1, x2, ..., xn â‰¥ 0..
  example: []
  syntax:
    content: string BuildDomain(LinearProgrammingProblem problem)
    parameters:
    - id: problem
      type: Methods.MathObjects.LinearProgrammingProblem
      description: The linear programming problem.
    return:
      type: System.String
      description: A formatted string of the domain constraints.
    content.vb: Function BuildDomain(problem As LinearProgrammingProblem) As String
  overload: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain*
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  commentId: M:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  id: BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem,System.Boolean)
  parent: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService
  langs:
  - csharp
  - vb
  name: BuildIntegerNote(LinearProgrammingProblem, bool)
  nameWithType: IProblemFormatterService.BuildIntegerNote(LinearProgrammingProblem, bool)
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem, bool)
  type: Method
  source:
    remote:
      path: Linear Programming Calculator Desktop/Services/IProblemFormatterService.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: BuildIntegerNote
    path: Services/IProblemFormatterService.cs
    startLine: 37
  assemblies:
  - Linear Programming Calculator Desktop
  namespace: Linear_Programming_Calculator_Desktop.Services
  summary: Builds a formatted note about integer constraint if the problem is integer-constrained.
  example: []
  syntax:
    content: string BuildIntegerNote(LinearProgrammingProblem problem, bool isIntegerProblem)
    parameters:
    - id: problem
      type: Methods.MathObjects.LinearProgrammingProblem
      description: The linear programming problem.
    - id: isIntegerProblem
      type: System.Boolean
      description: Indicates whether the problem has integer constraint.
    return:
      type: System.String
      description: A formatted string note about integer constraint, or an empty string if not applicable.
    content.vb: Function BuildIntegerNote(problem As LinearProgrammingProblem, isIntegerProblem As Boolean) As String
  overload: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote*
  nameWithType.vb: IProblemFormatterService.BuildIntegerNote(LinearProgrammingProblem, Boolean)
  fullName.vb: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote(Methods.MathObjects.LinearProgrammingProblem, Boolean)
  name.vb: BuildIntegerNote(LinearProgrammingProblem, Boolean)
references:
- uid: Linear_Programming_Calculator_Desktop.Services
  commentId: N:Linear_Programming_Calculator_Desktop.Services
  href: Linear_Programming_Calculator_Desktop.html
  name: Linear_Programming_Calculator_Desktop.Services
  nameWithType: Linear_Programming_Calculator_Desktop.Services
  fullName: Linear_Programming_Calculator_Desktop.Services
  spec.csharp:
  - uid: Linear_Programming_Calculator_Desktop
    name: Linear_Programming_Calculator_Desktop
    href: Linear_Programming_Calculator_Desktop.html
  - name: .
  - uid: Linear_Programming_Calculator_Desktop.Services
    name: Services
    href: Linear_Programming_Calculator_Desktop.Services.html
  spec.vb:
  - uid: Linear_Programming_Calculator_Desktop
    name: Linear_Programming_Calculator_Desktop
    href: Linear_Programming_Calculator_Desktop.html
  - name: .
  - uid: Linear_Programming_Calculator_Desktop.Services
    name: Services
    href: Linear_Programming_Calculator_Desktop.Services.html
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction*
  commentId: Overload:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction
  href: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.html#Linear_Programming_Calculator_Desktop_Services_IProblemFormatterService_BuildObjectiveFunction_Methods_MathObjects_LinearProgrammingProblem_
  name: BuildObjectiveFunction
  nameWithType: IProblemFormatterService.BuildObjectiveFunction
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildObjectiveFunction
- uid: Methods.MathObjects.LinearProgrammingProblem
  commentId: T:Methods.MathObjects.LinearProgrammingProblem
  parent: Methods.MathObjects
  name: LinearProgrammingProblem
  nameWithType: LinearProgrammingProblem
  fullName: Methods.MathObjects.LinearProgrammingProblem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Methods.MathObjects
  commentId: N:Methods.MathObjects
  name: Methods.MathObjects
  nameWithType: Methods.MathObjects
  fullName: Methods.MathObjects
  spec.csharp:
  - uid: Methods
    name: Methods
  - name: .
  - uid: Methods.MathObjects
    name: MathObjects
  spec.vb:
  - uid: Methods
    name: Methods
  - name: .
  - uid: Methods.MathObjects
    name: MathObjects
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints*
  commentId: Overload:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints
  href: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.html#Linear_Programming_Calculator_Desktop_Services_IProblemFormatterService_BuildConstraints_Methods_MathObjects_LinearProgrammingProblem_System_Boolean_
  name: BuildConstraints
  nameWithType: IProblemFormatterService.BuildConstraints
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildConstraints
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain*
  commentId: Overload:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain
  href: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.html#Linear_Programming_Calculator_Desktop_Services_IProblemFormatterService_BuildDomain_Methods_MathObjects_LinearProgrammingProblem_
  name: BuildDomain
  nameWithType: IProblemFormatterService.BuildDomain
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildDomain
- uid: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote*
  commentId: Overload:Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote
  href: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.html#Linear_Programming_Calculator_Desktop_Services_IProblemFormatterService_BuildIntegerNote_Methods_MathObjects_LinearProgrammingProblem_System_Boolean_
  name: BuildIntegerNote
  nameWithType: IProblemFormatterService.BuildIntegerNote
  fullName: Linear_Programming_Calculator_Desktop.Services.IProblemFormatterService.BuildIntegerNote
