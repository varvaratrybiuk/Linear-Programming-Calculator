### YamlMime:ManagedReference
items:
- uid: Methods.Interfaces.ILinearSolver
  commentId: T:Methods.Interfaces.ILinearSolver
  id: ILinearSolver
  parent: Methods.Interfaces
  children:
  - Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  - Methods.Interfaces.ILinearSolver.IsOptimal
  - Methods.Interfaces.ILinearSolver.IsUnbounded
  - Methods.Interfaces.ILinearSolver.Pivot
  - Methods.Interfaces.ILinearSolver.Solve
  langs:
  - csharp
  - vb
  name: ILinearSolver
  nameWithType: ILinearSolver
  fullName: Methods.Interfaces.ILinearSolver
  type: Interface
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: ILinearSolver
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 5
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Interface that represents the essential methods for solving Linear Programming Problems (LPPs).
  example: []
  syntax:
    content: public interface ILinearSolver
    content.vb: Public Interface ILinearSolver
- uid: Methods.Interfaces.ILinearSolver.Solve
  commentId: M:Methods.Interfaces.ILinearSolver.Solve
  id: Solve
  parent: Methods.Interfaces.ILinearSolver
  langs:
  - csharp
  - vb
  name: Solve()
  nameWithType: ILinearSolver.Solve()
  fullName: Methods.Interfaces.ILinearSolver.Solve()
  type: Method
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: Solve
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 10
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Performs the steps required to solve the linear programming problem.
  example: []
  syntax:
    content: void Solve()
    content.vb: Sub Solve()
  overload: Methods.Interfaces.ILinearSolver.Solve*
- uid: Methods.Interfaces.ILinearSolver.Pivot
  commentId: M:Methods.Interfaces.ILinearSolver.Pivot
  id: Pivot
  parent: Methods.Interfaces.ILinearSolver
  langs:
  - csharp
  - vb
  name: Pivot()
  nameWithType: ILinearSolver.Pivot()
  fullName: Methods.Interfaces.ILinearSolver.Pivot()
  type: Method
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: Pivot
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 14
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Finds the pivot row and column for the next step of solving.
  example: []
  syntax:
    content: void Pivot()
    content.vb: Sub Pivot()
  overload: Methods.Interfaces.ILinearSolver.Pivot*
- uid: Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  commentId: M:Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  id: CalculateReducedCosts
  parent: Methods.Interfaces.ILinearSolver
  langs:
  - csharp
  - vb
  name: CalculateReducedCosts()
  nameWithType: ILinearSolver.CalculateReducedCosts()
  fullName: Methods.Interfaces.ILinearSolver.CalculateReducedCosts()
  type: Method
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: CalculateReducedCosts
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 18
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Calculates the reduced costs (delta values) for the current simplex tableau.
  example: []
  syntax:
    content: void CalculateReducedCosts()
    content.vb: Sub CalculateReducedCosts()
  overload: Methods.Interfaces.ILinearSolver.CalculateReducedCosts*
- uid: Methods.Interfaces.ILinearSolver.IsUnbounded
  commentId: M:Methods.Interfaces.ILinearSolver.IsUnbounded
  id: IsUnbounded
  parent: Methods.Interfaces.ILinearSolver
  langs:
  - csharp
  - vb
  name: IsUnbounded()
  nameWithType: ILinearSolver.IsUnbounded()
  fullName: Methods.Interfaces.ILinearSolver.IsUnbounded()
  type: Method
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: IsUnbounded
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 23
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Determines whether the LPP has a solution.
  example: []
  syntax:
    content: bool IsUnbounded()
    return:
      type: System.Boolean
      description: <code>true</code> if the problem has no solution; otherwise, <code>false</code>.
    content.vb: Function IsUnbounded() As Boolean
  overload: Methods.Interfaces.ILinearSolver.IsUnbounded*
- uid: Methods.Interfaces.ILinearSolver.IsOptimal
  commentId: M:Methods.Interfaces.ILinearSolver.IsOptimal
  id: IsOptimal
  parent: Methods.Interfaces.ILinearSolver
  langs:
  - csharp
  - vb
  name: IsOptimal()
  nameWithType: ILinearSolver.IsOptimal()
  fullName: Methods.Interfaces.ILinearSolver.IsOptimal()
  type: Method
  source:
    remote:
      path: Methods/Interfaces/ILinearSolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: IsOptimal
    path: ../Methods/Interfaces/ILinearSolver.cs
    startLine: 28
  assemblies:
  - Methods
  namespace: Methods.Interfaces
  summary: Determines whether the current solution is optimal.
  example: []
  syntax:
    content: bool IsOptimal()
    return:
      type: System.Boolean
      description: <code>true</code> if the problem has an optimal solution; otherwise, <code>false</code>.
    content.vb: Function IsOptimal() As Boolean
  overload: Methods.Interfaces.ILinearSolver.IsOptimal*
references:
- uid: Methods.Interfaces
  commentId: N:Methods.Interfaces
  href: Methods.html
  name: Methods.Interfaces
  nameWithType: Methods.Interfaces
  fullName: Methods.Interfaces
  spec.csharp:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Interfaces
    name: Interfaces
    href: Methods.Interfaces.html
  spec.vb:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Interfaces
    name: Interfaces
    href: Methods.Interfaces.html
- uid: Methods.Interfaces.ILinearSolver.Solve*
  commentId: Overload:Methods.Interfaces.ILinearSolver.Solve
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Solve
  name: Solve
  nameWithType: ILinearSolver.Solve
  fullName: Methods.Interfaces.ILinearSolver.Solve
- uid: Methods.Interfaces.ILinearSolver.Pivot*
  commentId: Overload:Methods.Interfaces.ILinearSolver.Pivot
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Pivot
  name: Pivot
  nameWithType: ILinearSolver.Pivot
  fullName: Methods.Interfaces.ILinearSolver.Pivot
- uid: Methods.Interfaces.ILinearSolver.CalculateReducedCosts*
  commentId: Overload:Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_CalculateReducedCosts
  name: CalculateReducedCosts
  nameWithType: ILinearSolver.CalculateReducedCosts
  fullName: Methods.Interfaces.ILinearSolver.CalculateReducedCosts
- uid: Methods.Interfaces.ILinearSolver.IsUnbounded*
  commentId: Overload:Methods.Interfaces.ILinearSolver.IsUnbounded
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsUnbounded
  name: IsUnbounded
  nameWithType: ILinearSolver.IsUnbounded
  fullName: Methods.Interfaces.ILinearSolver.IsUnbounded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Methods.Interfaces.ILinearSolver.IsOptimal*
  commentId: Overload:Methods.Interfaces.ILinearSolver.IsOptimal
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsOptimal
  name: IsOptimal
  nameWithType: ILinearSolver.IsOptimal
  fullName: Methods.Interfaces.ILinearSolver.IsOptimal
