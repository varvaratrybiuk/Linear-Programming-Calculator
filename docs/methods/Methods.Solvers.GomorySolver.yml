### YamlMime:ManagedReference
items:
- uid: Methods.Solvers.GomorySolver
  commentId: T:Methods.Solvers.GomorySolver
  id: GomorySolver
  parent: Methods.Solvers
  children:
  - Methods.Solvers.GomorySolver.#ctor(Methods.Models.SimplexTable,Methods.MathObjects.LinearProgrammingProblem)
  - Methods.Solvers.GomorySolver.CalculateReducedCosts
  - Methods.Solvers.GomorySolver.GomoryHistory
  - Methods.Solvers.GomorySolver.IsOptimal
  - Methods.Solvers.GomorySolver.IsUnbounded
  - Methods.Solvers.GomorySolver.Pivot
  - Methods.Solvers.GomorySolver.Solve
  langs:
  - csharp
  - vb
  name: GomorySolver
  nameWithType: GomorySolver
  fullName: Methods.Solvers.GomorySolver
  type: Class
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: GomorySolver
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 12
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Represents a solver for the Gomory Cutting Plane method.
  example: []
  syntax:
    content: 'public class GomorySolver : ILinearSolver'
    content.vb: Public Class GomorySolver Implements ILinearSolver
  inheritance:
  - System.Object
  implements:
  - Methods.Interfaces.ILinearSolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Methods.Solvers.GomorySolver.#ctor(Methods.Models.SimplexTable,Methods.MathObjects.LinearProgrammingProblem)
  commentId: M:Methods.Solvers.GomorySolver.#ctor(Methods.Models.SimplexTable,Methods.MathObjects.LinearProgrammingProblem)
  id: '#ctor(Methods.Models.SimplexTable,Methods.MathObjects.LinearProgrammingProblem)'
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: GomorySolver(SimplexTable, LinearProgrammingProblem)
  nameWithType: GomorySolver.GomorySolver(SimplexTable, LinearProgrammingProblem)
  fullName: Methods.Solvers.GomorySolver.GomorySolver(Methods.Models.SimplexTable, Methods.MathObjects.LinearProgrammingProblem)
  type: Constructor
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: .ctor
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 12
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Represents a solver for the Gomory Cutting Plane method.
  example: []
  syntax:
    content: public GomorySolver(SimplexTable Table, LinearProgrammingProblem Problem)
    parameters:
    - id: Table
      type: Methods.Models.SimplexTable
      description: The simplex table obtained after solving by the Simplex method.
    - id: Problem
      type: Methods.MathObjects.LinearProgrammingProblem
      description: The initial linear programming problem.
    content.vb: Public Sub New(Table As SimplexTable, Problem As LinearProgrammingProblem)
  overload: Methods.Solvers.GomorySolver.#ctor*
  nameWithType.vb: GomorySolver.New(SimplexTable, LinearProgrammingProblem)
  fullName.vb: Methods.Solvers.GomorySolver.New(Methods.Models.SimplexTable, Methods.MathObjects.LinearProgrammingProblem)
  name.vb: New(SimplexTable, LinearProgrammingProblem)
- uid: Methods.Solvers.GomorySolver.GomoryHistory
  commentId: P:Methods.Solvers.GomorySolver.GomoryHistory
  id: GomoryHistory
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: GomoryHistory
  nameWithType: GomorySolver.GomoryHistory
  fullName: Methods.Solvers.GomorySolver.GomoryHistory
  type: Property
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: GomoryHistory
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 17
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: History of each Gomory cut step.
  example: []
  syntax:
    content: public List<GomoryHistory> GomoryHistory { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Methods.Models.GomoryHistory}
    content.vb: Public Property GomoryHistory As List(Of GomoryHistory)
  overload: Methods.Solvers.GomorySolver.GomoryHistory*
- uid: Methods.Solvers.GomorySolver.Pivot
  commentId: M:Methods.Solvers.GomorySolver.Pivot
  id: Pivot
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: Pivot()
  nameWithType: GomorySolver.Pivot()
  fullName: Methods.Solvers.GomorySolver.Pivot()
  type: Method
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: Pivot
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 42
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Finds the pivot row and column for the next solving step.
  remarks: >-
    The pivot row is determined by the minimum value in column A0. 

    Then, the theta row is calculated as |Î” * xij|, and the pivot column 

    is chosen by the minimum theta value. After that, the reduced costs are recalculated.
  example: []
  syntax:
    content: public void Pivot()
    content.vb: Public Sub Pivot()
  overload: Methods.Solvers.GomorySolver.Pivot*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Arises if the pivot column is not found.
  implements:
  - Methods.Interfaces.ILinearSolver.Pivot
- uid: Methods.Solvers.GomorySolver.CalculateReducedCosts
  commentId: M:Methods.Solvers.GomorySolver.CalculateReducedCosts
  id: CalculateReducedCosts
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: CalculateReducedCosts()
  nameWithType: GomorySolver.CalculateReducedCosts()
  fullName: Methods.Solvers.GomorySolver.CalculateReducedCosts()
  type: Method
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: CalculateReducedCosts
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 123
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Calculates the reduced costs (delta values) for the current simplex tableau.
  example: []
  syntax:
    content: public void CalculateReducedCosts()
    content.vb: Public Sub CalculateReducedCosts()
  overload: Methods.Solvers.GomorySolver.CalculateReducedCosts*
  implements:
  - Methods.Interfaces.ILinearSolver.CalculateReducedCosts
- uid: Methods.Solvers.GomorySolver.Solve
  commentId: M:Methods.Solvers.GomorySolver.Solve
  id: Solve
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: Solve()
  nameWithType: GomorySolver.Solve()
  fullName: Methods.Solvers.GomorySolver.Solve()
  type: Method
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: Solve
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 161
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Performs the steps required to solve the LPP.
  remarks: >-
    First, checks whether the current solution contains non-integer values or is not optimal.  

    If the solution is not optimal, calls the pivot method and repeats the check.  

    If it is optimal, verifies whether a feasible solution exists.  

    Then, finds the most fractional value in the solution, constructs the Gomory cut,  

    adds it to the simplex table, and determines the pivot element.
  example: []
  syntax:
    content: public void Solve()
    content.vb: Public Sub Solve()
  overload: Methods.Solvers.GomorySolver.Solve*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\"Arises if no solution exists or the given initial values are optimal.\""
  implements:
  - Methods.Interfaces.ILinearSolver.Solve
- uid: Methods.Solvers.GomorySolver.IsUnbounded
  commentId: M:Methods.Solvers.GomorySolver.IsUnbounded
  id: IsUnbounded
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: IsUnbounded()
  nameWithType: GomorySolver.IsUnbounded()
  fullName: Methods.Solvers.GomorySolver.IsUnbounded()
  type: Method
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: IsUnbounded
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 212
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: >-
    Determines whether the LPP has a solution.

    If the chosen row does not contain fractional values, no solution is found.
  example: []
  syntax:
    content: public bool IsUnbounded()
    return:
      type: System.Boolean
      description: <code>true</code> if the problem has no solution; otherwise, <code>false</code>.
    content.vb: Public Function IsUnbounded() As Boolean
  overload: Methods.Solvers.GomorySolver.IsUnbounded*
  implements:
  - Methods.Interfaces.ILinearSolver.IsUnbounded
- uid: Methods.Solvers.GomorySolver.IsOptimal
  commentId: M:Methods.Solvers.GomorySolver.IsOptimal
  id: IsOptimal
  parent: Methods.Solvers.GomorySolver
  langs:
  - csharp
  - vb
  name: IsOptimal()
  nameWithType: GomorySolver.IsOptimal()
  fullName: Methods.Solvers.GomorySolver.IsOptimal()
  type: Method
  source:
    remote:
      path: Methods/Solvers/GomorySolver.cs
      branch: main
      repo: git@github.com:varvaratrybiuk/Linear-Programming-Calculator.git
    id: IsOptimal
    path: ../Methods/Solvers/GomorySolver.cs
    startLine: 374
  assemblies:
  - Methods
  namespace: Methods.Solvers
  summary: Determines whether the current solution in the simplex table is optimal.
  remarks: A solution is optimal if all values in the first column are non-negative.
  example: []
  syntax:
    content: public bool IsOptimal()
    return:
      type: System.Boolean
      description: <code>true</code> if the solution is optimal; otherwise, <code>false</code>.
    content.vb: Public Function IsOptimal() As Boolean
  overload: Methods.Solvers.GomorySolver.IsOptimal*
  implements:
  - Methods.Interfaces.ILinearSolver.IsOptimal
references:
- uid: Methods.Solvers
  commentId: N:Methods.Solvers
  href: Methods.html
  name: Methods.Solvers
  nameWithType: Methods.Solvers
  fullName: Methods.Solvers
  spec.csharp:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Solvers
    name: Solvers
    href: Methods.Solvers.html
  spec.vb:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Solvers
    name: Solvers
    href: Methods.Solvers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Methods.Interfaces.ILinearSolver
  commentId: T:Methods.Interfaces.ILinearSolver
  parent: Methods.Interfaces
  href: Methods.Interfaces.ILinearSolver.html
  name: ILinearSolver
  nameWithType: ILinearSolver
  fullName: Methods.Interfaces.ILinearSolver
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Methods.Interfaces
  commentId: N:Methods.Interfaces
  href: Methods.html
  name: Methods.Interfaces
  nameWithType: Methods.Interfaces
  fullName: Methods.Interfaces
  spec.csharp:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Interfaces
    name: Interfaces
    href: Methods.Interfaces.html
  spec.vb:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Interfaces
    name: Interfaces
    href: Methods.Interfaces.html
- uid: Methods.Solvers.GomorySolver.#ctor*
  commentId: Overload:Methods.Solvers.GomorySolver.#ctor
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver__ctor_Methods_Models_SimplexTable_Methods_MathObjects_LinearProgrammingProblem_
  name: GomorySolver
  nameWithType: GomorySolver.GomorySolver
  fullName: Methods.Solvers.GomorySolver.GomorySolver
  nameWithType.vb: GomorySolver.New
  fullName.vb: Methods.Solvers.GomorySolver.New
  name.vb: New
- uid: Methods.Models.SimplexTable
  commentId: T:Methods.Models.SimplexTable
  parent: Methods.Models
  href: Methods.Models.SimplexTable.html
  name: SimplexTable
  nameWithType: SimplexTable
  fullName: Methods.Models.SimplexTable
- uid: Methods.MathObjects.LinearProgrammingProblem
  commentId: T:Methods.MathObjects.LinearProgrammingProblem
  parent: Methods.MathObjects
  href: Methods.MathObjects.LinearProgrammingProblem.html
  name: LinearProgrammingProblem
  nameWithType: LinearProgrammingProblem
  fullName: Methods.MathObjects.LinearProgrammingProblem
- uid: Methods.Models
  commentId: N:Methods.Models
  href: Methods.html
  name: Methods.Models
  nameWithType: Methods.Models
  fullName: Methods.Models
  spec.csharp:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Models
    name: Models
    href: Methods.Models.html
  spec.vb:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.Models
    name: Models
    href: Methods.Models.html
- uid: Methods.MathObjects
  commentId: N:Methods.MathObjects
  href: Methods.html
  name: Methods.MathObjects
  nameWithType: Methods.MathObjects
  fullName: Methods.MathObjects
  spec.csharp:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.MathObjects
    name: MathObjects
    href: Methods.MathObjects.html
  spec.vb:
  - uid: Methods
    name: Methods
    href: Methods.html
  - name: .
  - uid: Methods.MathObjects
    name: MathObjects
    href: Methods.MathObjects.html
- uid: Methods.Solvers.GomorySolver.GomoryHistory*
  commentId: Overload:Methods.Solvers.GomorySolver.GomoryHistory
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_GomoryHistory
  name: GomoryHistory
  nameWithType: GomorySolver.GomoryHistory
  fullName: Methods.Solvers.GomorySolver.GomoryHistory
- uid: System.Collections.Generic.List{Methods.Models.GomoryHistory}
  commentId: T:System.Collections.Generic.List{Methods.Models.GomoryHistory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GomoryHistory>
  nameWithType: List<GomoryHistory>
  fullName: System.Collections.Generic.List<Methods.Models.GomoryHistory>
  nameWithType.vb: List(Of GomoryHistory)
  fullName.vb: System.Collections.Generic.List(Of Methods.Models.GomoryHistory)
  name.vb: List(Of GomoryHistory)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Methods.Models.GomoryHistory
    name: GomoryHistory
    href: Methods.Models.GomoryHistory.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Methods.Models.GomoryHistory
    name: GomoryHistory
    href: Methods.Models.GomoryHistory.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Methods.Solvers.GomorySolver.Pivot*
  commentId: Overload:Methods.Solvers.GomorySolver.Pivot
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_Pivot
  name: Pivot
  nameWithType: GomorySolver.Pivot
  fullName: Methods.Solvers.GomorySolver.Pivot
- uid: Methods.Interfaces.ILinearSolver.Pivot
  commentId: M:Methods.Interfaces.ILinearSolver.Pivot
  parent: Methods.Interfaces.ILinearSolver
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Pivot
  name: Pivot()
  nameWithType: ILinearSolver.Pivot()
  fullName: Methods.Interfaces.ILinearSolver.Pivot()
  spec.csharp:
  - uid: Methods.Interfaces.ILinearSolver.Pivot
    name: Pivot
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Pivot
  - name: (
  - name: )
  spec.vb:
  - uid: Methods.Interfaces.ILinearSolver.Pivot
    name: Pivot
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Pivot
  - name: (
  - name: )
- uid: Methods.Solvers.GomorySolver.CalculateReducedCosts*
  commentId: Overload:Methods.Solvers.GomorySolver.CalculateReducedCosts
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_CalculateReducedCosts
  name: CalculateReducedCosts
  nameWithType: GomorySolver.CalculateReducedCosts
  fullName: Methods.Solvers.GomorySolver.CalculateReducedCosts
- uid: Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  commentId: M:Methods.Interfaces.ILinearSolver.CalculateReducedCosts
  parent: Methods.Interfaces.ILinearSolver
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_CalculateReducedCosts
  name: CalculateReducedCosts()
  nameWithType: ILinearSolver.CalculateReducedCosts()
  fullName: Methods.Interfaces.ILinearSolver.CalculateReducedCosts()
  spec.csharp:
  - uid: Methods.Interfaces.ILinearSolver.CalculateReducedCosts
    name: CalculateReducedCosts
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_CalculateReducedCosts
  - name: (
  - name: )
  spec.vb:
  - uid: Methods.Interfaces.ILinearSolver.CalculateReducedCosts
    name: CalculateReducedCosts
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_CalculateReducedCosts
  - name: (
  - name: )
- uid: Methods.Solvers.GomorySolver.Solve*
  commentId: Overload:Methods.Solvers.GomorySolver.Solve
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_Solve
  name: Solve
  nameWithType: GomorySolver.Solve
  fullName: Methods.Solvers.GomorySolver.Solve
- uid: Methods.Interfaces.ILinearSolver.Solve
  commentId: M:Methods.Interfaces.ILinearSolver.Solve
  parent: Methods.Interfaces.ILinearSolver
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Solve
  name: Solve()
  nameWithType: ILinearSolver.Solve()
  fullName: Methods.Interfaces.ILinearSolver.Solve()
  spec.csharp:
  - uid: Methods.Interfaces.ILinearSolver.Solve
    name: Solve
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Solve
  - name: (
  - name: )
  spec.vb:
  - uid: Methods.Interfaces.ILinearSolver.Solve
    name: Solve
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_Solve
  - name: (
  - name: )
- uid: Methods.Solvers.GomorySolver.IsUnbounded*
  commentId: Overload:Methods.Solvers.GomorySolver.IsUnbounded
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_IsUnbounded
  name: IsUnbounded
  nameWithType: GomorySolver.IsUnbounded
  fullName: Methods.Solvers.GomorySolver.IsUnbounded
- uid: Methods.Interfaces.ILinearSolver.IsUnbounded
  commentId: M:Methods.Interfaces.ILinearSolver.IsUnbounded
  parent: Methods.Interfaces.ILinearSolver
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsUnbounded
  name: IsUnbounded()
  nameWithType: ILinearSolver.IsUnbounded()
  fullName: Methods.Interfaces.ILinearSolver.IsUnbounded()
  spec.csharp:
  - uid: Methods.Interfaces.ILinearSolver.IsUnbounded
    name: IsUnbounded
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsUnbounded
  - name: (
  - name: )
  spec.vb:
  - uid: Methods.Interfaces.ILinearSolver.IsUnbounded
    name: IsUnbounded
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsUnbounded
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Methods.Solvers.GomorySolver.IsOptimal*
  commentId: Overload:Methods.Solvers.GomorySolver.IsOptimal
  href: Methods.Solvers.GomorySolver.html#Methods_Solvers_GomorySolver_IsOptimal
  name: IsOptimal
  nameWithType: GomorySolver.IsOptimal
  fullName: Methods.Solvers.GomorySolver.IsOptimal
- uid: Methods.Interfaces.ILinearSolver.IsOptimal
  commentId: M:Methods.Interfaces.ILinearSolver.IsOptimal
  parent: Methods.Interfaces.ILinearSolver
  href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsOptimal
  name: IsOptimal()
  nameWithType: ILinearSolver.IsOptimal()
  fullName: Methods.Interfaces.ILinearSolver.IsOptimal()
  spec.csharp:
  - uid: Methods.Interfaces.ILinearSolver.IsOptimal
    name: IsOptimal
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsOptimal
  - name: (
  - name: )
  spec.vb:
  - uid: Methods.Interfaces.ILinearSolver.IsOptimal
    name: IsOptimal
    href: Methods.Interfaces.ILinearSolver.html#Methods_Interfaces_ILinearSolver_IsOptimal
  - name: (
  - name: )
